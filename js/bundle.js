/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/actions.js":
/*!***********************!*\
  !*** ./js/actions.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Actions; });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vector */ \"./js/vector.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Actions = /*#__PURE__*/function () {\n  function Actions(game, dom, tutorial, tiles) {\n    _classCallCheck(this, Actions);\n\n    this.game = game;\n    this.dom = dom;\n    this.tutorial = tutorial;\n    this.scores = null;\n    this.mouseX;\n    this.mouseY;\n    this.handleCanvas();\n    this.handleButtonClicks();\n    this.handleKeyListeners();\n    this.handleTileListeners(tiles);\n  }\n\n  _createClass(Actions, [{\n    key: \"handleCanvas\",\n    value: function handleCanvas() {\n      this.dom.canvas.addEventListener(\"mousemove\", this.handleCanvasMove.bind(this));\n      this.dom.canvas.addEventListener(\"mouseover\", this.handleCanvasOver.bind(this));\n      this.dom.canvas.addEventListener(\"mouseout\", this.handleCanvasOut.bind(this));\n      this.dom.canvas.addEventListener(\"click\", this.handleCanvasClick.bind(this));\n      this.dom.canvas.addEventListener(\"dblclick\", this.handleCanvasDblClick.bind(this));\n    }\n  }, {\n    key: \"handleCanvasMove\",\n    value: function handleCanvasMove(event) {\n      this.mouseX = event.offsetX;\n      this.mouseY = event.offsetY;\n      var towers = this.game.towers;\n      if (towers.length < 1) return;\n      var tower = towers[towers.length - 1];\n\n      if (!tower.placed && this.game.placingTower === true) {\n        tower.location.x = this.mouseX;\n        tower.location.y = this.mouseY;\n      }\n    }\n  }, {\n    key: \"handleCanvasOver\",\n    value: function handleCanvasOver() {\n      if (this.game.towers.length < 1) return;\n      this.game.towers[this.game.towers.length - 1].visible = true;\n    }\n  }, {\n    key: \"handleCanvasOut\",\n    value: function handleCanvasOut() {\n      if (this.game.placingTower) {\n        this.game.placingTower = false;\n        this.game.towers.splice(this.game.towers.length - 1, 1);\n      }\n    }\n  }, {\n    key: \"handleCanvasClick\",\n    value: function handleCanvasClick() {\n      var col = Math.floor(this.mouseX / this.game.cellSize);\n      var row = Math.floor(this.mouseY / this.game.cellSize);\n      var cell = this.game.grid[col][row];\n      this.game.resetSelects();\n\n      if (this.game.placingTower) {\n        this.game.checkTowerPlacement(cell);\n      } else {\n        for (var i = 0; i < this.game.towers.length; i++) {\n          var tower = this.game.towers[i];\n\n          if (tower.location.x === cell.center.x && tower.location.y === cell.center.y) {\n            if (tower.selected) {\n              tower.deselect(true);\n            } else {\n              tower.select();\n            }\n          } else {\n            tower.selected = false;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handleCanvasDblClick\",\n    value: function handleCanvasDblClick() {\n      var gridCol = Math.floor(this.mouseX / this.game.cellSize);\n      var gridRow = Math.floor(this.mouseY / this.game.cellSize);\n      var cell = this.game.grid[gridCol][gridRow];\n      this.game.resetSelects();\n\n      for (var i = 0; i < this.game.towers.length; i++) {\n        var tower = this.game.towers[i];\n\n        if (tower.location.x === cell.center.x && tower.location.y === cell.center.y) {\n          this.game.selectAllTowers(tower.type, tower.level);\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"handleButtonClicks\",\n    value: function handleButtonClicks() {\n      var _this = this;\n\n      this.dom.wave.addEventListener(\"click\", this.waveClick.bind(this));\n      this.dom.upgrade.addEventListener(\"click\", this.upgradeClick.bind(this));\n      this.dom.sell.addEventListener(\"click\", this.sellClick.bind(this));\n      this.dom.auto.addEventListener(\"change\", function (e) {\n        return _this.autoWaveToggle(e, _this.game);\n      });\n    }\n  }, {\n    key: \"autoWaveToggle\",\n    value: function autoWaveToggle(e, game) {\n      if (e.currentTarget.checked) {\n        game.autoWave = true;\n      } else {\n        game.autoWave = false;\n      }\n    }\n  }, {\n    key: \"waveClick\",\n    value: function waveClick() {\n      if (!this.game.sendingWave && this.game.gameStarted && !this.game.gameOver) {\n        this.game.wave += 1;\n        this.game.sendingWave = true;\n        this.game.waveTimer = 400;\n\n        if (this.game.wave === 1) {\n          this.dom.waveText.innerText = \"Next Wave\";\n          this.dom.towerMenu.classList.remove(\"active\");\n          this.tutorial.showInfo(\"start\");\n        }\n\n        this.dom.wave.classList.remove(\"clickable\");\n        this.game.nextWave();\n      }\n    }\n  }, {\n    key: \"upgradeClick\",\n    value: function upgradeClick() {\n      var _this2 = this;\n\n      this.game.selectedTowers.forEach(function (tower) {\n        if (tower.canUpgrade) {\n          if (_this2.game.bits - tower.upgrade >= 0) {\n            _this2.game.bits -= tower.upgrade;\n            _this2.game.cr -= tower.upgrade;\n            tower.handleUpgrade();\n          } else {\n            _this2.game.actions.blinkBank();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"sellClick\",\n    value: function sellClick() {\n      var _this3 = this;\n\n      this.game.selectedTowers.forEach(function (tower) {\n        tower.deselect(false);\n        _this3.game.bits += tower.upgrade / 2;\n        _this3.game.cr += tower.upgrade / 2;\n      });\n      this.game.resetSelects();\n      this.game.loadPaths();\n\n      for (var c = 0; c < this.game.numCols; c++) {\n        for (var r = 0; r < this.game.numRows; r++) {\n          this.game.grid[c][r].loadAdjacentCells();\n        }\n      }\n\n      this.game.path = this.game.getPath();\n    }\n  }, {\n    key: \"handleKeyListeners\",\n    value: function handleKeyListeners() {\n      var _this4 = this;\n\n      document.addEventListener(\"keydown\", function (event) {\n        if (event.keyCode === 27) {\n          _this4.game.placingTower = false;\n\n          if (_this4.game.selectedTowers.length) {\n            _this4.game.resetSelects();\n          }\n\n          if (_this4.game.towers.length && !_this4.game.towers[_this4.game.towers.length - 1].placed) {\n            _this4.game.towers.splice(_this4.game.towers.length - 1, 1);\n          }\n        } else if (event.keyCode === 49) {\n          _this4.towerKey(0);\n        } else if (event.keyCode === 50) {\n          _this4.towerKey(1);\n        } else if (event.keyCode === 51) {\n          _this4.towerKey(2);\n        } else if (event.keyCode === 52) {\n          _this4.towerKey(3);\n        } else if (event.keyCode === 83) {\n          _this4.sellClick();\n        } else if (event.keyCode === 81) {\n          _this4.upgradeClick();\n        } else if (event.keyCode === 73) {\n          _this4.tutorial.toggleTutorial();\n        } else if (event.keyCode === 72) {\n          _this4.tutorial.toggleHotkeys();\n        }\n      });\n    }\n  }, {\n    key: \"towerKey\",\n    value: function towerKey(towerNum) {\n      this.game.placingTower = false;\n      var towers = this.game.towers;\n\n      if (towers.length && !towers[towers.length - 1].placed) {\n        towers.pop();\n      }\n\n      this.game.tileDivs[towerNum].click();\n      var currentTower = towers[towers.length - 1];\n\n      if (!currentTower.placed) {\n        currentTower.location = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.mouseX, this.mouseY);\n      }\n\n      currentTower.visible = true;\n    }\n  }, {\n    key: \"handleTileListeners\",\n    value: function handleTileListeners(tiles) {\n      var _this5 = this;\n\n      for (var i = 0; i < tiles.length; i++) {\n        var tileDiv = tiles[i];\n        tileDiv.addEventListener(\"mouseover\", function (e) {\n          return _this5.tileRollOver(e, _this5.game);\n        }, false);\n        tileDiv.addEventListener(\"mouseout\", function (e) {\n          return _this5.tileRollOut(e, _this5.game);\n        }, false);\n        tileDiv.addEventListener(\"click\", function (e) {\n          return _this5.tileClicked(e, _this5.game);\n        }, false);\n      }\n    }\n  }, {\n    key: \"tileRollOver\",\n    value: function tileRollOver(e, game) {\n      game.showTowerDivInfo = e.currentTarget;\n    }\n  }, {\n    key: \"tileRollOut\",\n    value: function tileRollOut(e, game) {\n      game.showTowerDivInfo = null;\n    }\n  }, {\n    key: \"tileClicked\",\n    value: function tileClicked(e, game) {\n      var towerDiv = e.currentTarget;\n\n      if (game.placingTower === true) {\n        if (!game.towers[game.towers.length - 1].placed) {\n          game.towers.splice(game.towers.length - 1, 1);\n        }\n      }\n\n      if (game.bits >= towerDiv.cost) {\n        game.createTower(towerDiv);\n        game.currentTileDiv = towerDiv;\n        game.placingTower = true;\n\n        if (game.selectedTowers) {\n          game.resetSelects();\n        }\n      } else {\n        game.actions.blinkBank();\n      }\n    }\n  }, {\n    key: \"blinkBank\",\n    value: function blinkBank() {\n      var bank = this.dom.bank;\n\n      if (!bank.classList.contains(\"flashing\")) {\n        bank.classList.add(\"flashing\");\n        setTimeout(function () {\n          bank.classList.remove(\"flashing\");\n        }, 1000);\n      }\n    }\n  }, {\n    key: \"showTowerInfo\",\n    value: function showTowerInfo() {\n      var tower = this.getTower();\n      this.toggleEditButtons(tower);\n      if (!tower) return;\n      this.dom.typeP.innerHTML = tower.type.toUpperCase();\n      this.dom.damageP.innerHTML = tower.damage;\n      this.dom.rangeP.innerHTML = tower.range;\n      this.dom.speedP.innerHTML = 2000 - tower.cooldown;\n\n      if (tower.canUpgrade || this.game.showTowerDivInfo) {\n        this.dom.nextP.innerHTML = tower.upgrade + \"¥\";\n      } else {\n        this.dom.nextP.innerHTML = \"Max\";\n      }\n    }\n  }, {\n    key: \"getTower\",\n    value: function getTower() {\n      return this.game.showTowerDivInfo ? this.game.showTowerDivInfo : this.game.selectedTowers[this.game.selectedTowers.length - 1];\n    }\n  }, {\n    key: \"toggleEditButtons\",\n    value: function toggleEditButtons(tower) {\n      var upChange = this.dom.upgrade.style.opacity;\n      var sellChange = this.dom.sell.style.opacity;\n\n      if (tower) {\n        this.dom.upgrade.style.opacity = tower.canUpgrade ? 100 : 0;\n        this.dom.sell.style.opacity = tower.placed ? 100 : 0;\n      } else {\n        this.dom.upgrade.style.opacity = 0;\n        this.dom.sell.style.opacity = 0;\n      }\n\n      if (upChange !== this.dom.upgrade.style.opacity) {\n        this.dom.upgrade.classList.toggle(\"clickable\");\n      }\n\n      if (sellChange !== this.dom.sell.style.opacity) {\n        this.dom.sell.classList.toggle(\"clickable\");\n      }\n    }\n  }, {\n    key: \"updateStats\",\n    value: function updateStats() {\n      for (var i = 0; i < this.dom.infoTiles.length; i++) {\n        var title = this.dom.infoTiles[i];\n        var value = document.createElement(\"p\");\n\n        if (title.innerHTML.includes(\"Bank\")) {\n          title.innerHTML = \"<h4>Bank</h4> <br/>\";\n          value.innerHTML = this.game.bits + \"¥\";\n        } else if (title.innerHTML.includes(\"Lives\")) {\n          title.innerHTML = \"<h4>Lives</h4> <br/>\";\n          value.innerHTML = this.game.lives;\n        } else if (title.innerHTML.includes(\"Score\")) {\n          title.innerHTML = \"<h4>Score</h4> <br/>\";\n          value.innerHTML = this.game.score;\n        } else if (title.innerHTML.includes(\"Wave\")) {\n          title.innerHTML = \"<h4>Wave</h4> <br/>\";\n          value.innerHTML = this.game.wave;\n        }\n\n        title.appendChild(value);\n      }\n    }\n  }, {\n    key: \"handleGameOver\",\n    value: function handleGameOver() {\n      var _this6 = this;\n\n      this.game.gameOver = true;\n      this.game.context.fillStyle = \"rgba(125, 125, 125, 0.6)\";\n      this.game.context.fillRect(0, 0, 840, 560);\n      this.dom.gameOver.style.opacity = 100;\n      this.dom.gameOver.style.width = \"100%\";\n      this.dom.gameOver.style.height = \"100%\";\n      this.dom.overTitle.style.display = \"inline-block\";\n      var highscores = firebase.database().ref(\"scores\").orderByChild(\"score\").limitToLast(10);\n      this.game.f = this.game.score;\n      var score = window.localStorage.getItem(\"score\");\n\n      if (score && score < this.game.f || !score) {\n        score = this.game.f;\n        window.localStorage.setItem(\"score\", this.game.f);\n      }\n\n      this.dom[\"final\"].innerHTML = \"Final Score: \".concat(this.game.f);\n      this.dom.local.innerHTML = \"Local Highest: \".concat(score);\n      setTimeout(function () {\n        _this6.dom.holder.style.opacity = 0;\n        _this6.dom.gameOver.style.top = \"15%\";\n        _this6.dom.overTitle.style.color = \"rgb(171, 171, 171)\";\n        _this6.dom.terminal.style.display = \"flex\";\n        _this6.dom.canvas.style.backgroundColor = \"\";\n        _this6.dom.tutorial.style.opacity = 0;\n        _this6.dom.topBar.style.opacity = 0;\n        _this6.dom.bottomBar.style.opacity = 0;\n        setTimeout(function () {\n          _this6.dom.terminal.style.opacity = 100;\n\n          _this6.scores.handleScores(highscores);\n\n          setTimeout(function () {\n            _this6.game.context.clearRect(0, 0, 840, 560);\n          }, 1000);\n        }, 1000);\n      }, 1000);\n    }\n  }, {\n    key: \"newGame\",\n    value: function newGame() {\n      this.dom.gameOver.style.opacity = 0;\n      this.dom.gameOver.style.width = \"0px\";\n      this.dom.gameOver.style.height = \"0px\";\n      this.dom.overTitle.style.display = \"none\";\n      this.dom.terminal.style.display = \"none\";\n      this.dom.holder.style.opacity = 100;\n      this.dom.footer.style.opacity = 100;\n      this.dom.gameOver.style.top = \"40%\";\n      this.dom.progress.style.width = \"0%\";\n      this.dom.terminal.removeChild(this.dom.terminal.lastChild);\n\n      while (this.dom.scores.firstChild) {\n        this.dom.scores.removeChild(this.dom.scores.lastChild);\n      }\n\n      while (this.dom.towerMenu.firstChild) {\n        this.dom.towerMenu.removeChild(this.dom.towerMenu.lastChild);\n      }\n\n      this.dom.auto.checked = false;\n      this.dom.waveText.innerText = \"First Wave\";\n      this.dom.wave.classList.remove(\"active\");\n      this.dom.topBar.style.opacity = 0;\n      this.dom.bottomBar.style.opacity = 0;\n      this.dom.play.style.display = \"\";\n      this.dom.startText.style.display = \"flex\";\n\n      if (this.dom.tutorialOpen) {\n        this.tutorial.toggleTutorial();\n      }\n\n      if (this.dom.hotkeysOpen) {\n        this.tutorial.toggleHotkeys();\n      }\n\n      this.init();\n    }\n  }]);\n\n  return Actions;\n}();\n\n\n\n//# sourceURL=webpack:///./js/actions.js?");

/***/ }),

/***/ "./js/attack.js":
/*!**********************!*\
  !*** ./js/attack.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Attack; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Attack = /*#__PURE__*/function () {\n  function Attack(loc, sprites, context, angle, idx, level, type, damage, speed) {\n    _classCallCheck(this, Attack);\n\n    this.location = loc.copy();\n    this.sprites = sprites;\n    this.context = context;\n    this.angle = angle;\n    this.radius = 10;\n    this.idx = idx;\n    this.level = level;\n    this.type = type;\n    this.speed = 5;\n    this.hit = false;\n    this.damage = damage;\n    this.speed = speed;\n    this.width = 18;\n    this.height = 18;\n  }\n\n  _createClass(Attack, [{\n    key: \"run\",\n    value: function run() {\n      this.update();\n      this.render();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.location.y += Math.sin(this.angle) * this.speed;\n      this.location.x += Math.cos(this.angle) * this.speed;\n\n      if (this.location.x > 840 || this.location.x < 0 || this.location.y > 560 || this.location.y < 0) {\n        this.hit = true;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.context.save();\n      this.context.translate(this.location.x, this.location.y);\n      this.context.rotate(this.angle);\n      this.context.drawImage(this.sprites.attack, this.level * this.width, this.idx * this.height, this.width, this.height, -this.width / 2, -this.height / 2, this.width, this.height);\n      this.context.restore();\n    }\n  }]);\n\n  return Attack;\n}();\n\n\n\n//# sourceURL=webpack:///./js/attack.js?");

/***/ }),

/***/ "./js/cell.js":
/*!********************!*\
  !*** ./js/cell.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Cell; });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vector */ \"./js/vector.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Cell = /*#__PURE__*/function () {\n  function Cell(id, grid, size, context, wallImg, selectImg, col, row) {\n    _classCallCheck(this, Cell);\n\n    this.id = id;\n    this.grid = grid;\n    this.size = size;\n    this.location = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](col * this.size, row * this.size);\n    this.center = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.location.x + this.size / 2, this.location.y + this.size / 2);\n    this.context = context;\n    this.col = col;\n    this.row = row; // * images\n\n    this.wallImg = wallImg;\n    this.selectImg = selectImg;\n    this.img = this.wallImg; // * path finding\n\n    this.adjacent = [];\n    this.smallestAdjacent = null;\n    this.value = -1; // * manage state\n\n    this[\"static\"] = false;\n    this.occupied = false;\n    this.attacked = false;\n    this.selected = false; // * manage attack state\n\n    this.attackDamage = null;\n    this.attackSlow = false;\n    this.attackTimeout = 0; // * show invalid placement\n\n    this.cancelled = false;\n    this.cancTimeout = 0;\n  }\n\n  _createClass(Cell, [{\n    key: \"loadAdjacentCells\",\n    value: function loadAdjacentCells() {\n      // * up\n      if (this.row > 0 && !this.occupied && !this.grid[this.col][this.row - 1].occupied) {\n        this.adjacent.push(this.grid[this.col][this.row - 1]);\n      } // * right\n\n\n      if (this.col < this.grid.length - 1 && !this.occupied && !this.grid[this.col + 1][this.row].occupied) {\n        this.adjacent.push(this.grid[this.col + 1][this.row]);\n      } // * down\n\n\n      if (this.row < this.grid[this.col].length - 1 && !this.occupied && !this.grid[this.col][this.row + 1].occupied) {\n        this.adjacent.push(this.grid[this.col][this.row + 1]);\n      } // * left\n\n\n      if (this.col > 0 && !this.occupied && !this.grid[this.col - 1][this.row].occupied) {\n        this.adjacent.push(this.grid[this.col - 1][this.row]);\n      }\n    }\n  }, {\n    key: \"getShortestRoute\",\n    value: function getShortestRoute() {\n      var smallest, idx;\n\n      for (var i = 0; i < this.adjacent.length; i++) {\n        if (this.adjacent[i].value < smallest || smallest === undefined) {\n          smallest = this.adjacent[i].value;\n          idx = i;\n        }\n      }\n\n      this.smallestAdjacent = this.adjacent[idx];\n    }\n  }, {\n    key: \"attack\",\n    value: function attack(damage, slow) {\n      this.attacked = true;\n      this.attackDamage = damage;\n      this.attackSlow = slow;\n      this.attackTimeout = 2 + slow;\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.occupied = false;\n      this.cancelled = true;\n      this.cancTimeout = 3;\n    }\n  }, {\n    key: \"timeout\",\n    value: function timeout() {\n      this.cancTimeout--;\n\n      if (this.cancTimeout <= 0) {\n        this.cancelled = false;\n      }\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      this.checkAttack();\n      this.render();\n    }\n  }, {\n    key: \"checkAttack\",\n    value: function checkAttack() {\n      if (this.attacked) {\n        this.attackTimeout--;\n\n        if (this.attackTimeout <= 0) {\n          this.attacked = false;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this[\"static\"] || this.occupied) {\n        this.renderImage(\"img\");\n        return;\n      }\n\n      if (this.cancelled) {\n        this.context.fillStyle = \"rgba(255, 255, 255, 0.6)\";\n        this.timeout();\n        this.context.fillRect(this.location.x, this.location.y, this.size, this.size);\n      } // this.showGridNums(); // * display grid lines and pathing values\n\n    }\n  }, {\n    key: \"renderImage\",\n    value: function renderImage(img) {\n      this.context.save();\n      this.context.translate(this.center.x, this.center.y);\n      this.context.drawImage(this[img], -this[img].width / 2, -this[img].height / 2);\n      this.context.restore();\n    }\n  }, {\n    key: \"showGridNums\",\n    value: function showGridNums() {\n      this.context.strokeStyle = \"#333333\";\n      this.context.fillStyle = \"#333333\";\n      this.context.lineWidth = 1;\n      this.context.strokeRect(this.location.x, this.location.y, this.size, this.size);\n      this.context.fillText(this.value, this.location.x + 15, this.location.y + 15);\n    }\n  }]);\n\n  return Cell;\n}();\n\n\n\n//# sourceURL=webpack:///./js/cell.js?");

/***/ }),

/***/ "./js/creep.js":
/*!*********************!*\
  !*** ./js/creep.js ***!
  \*********************/
/*! exports provided: Slime, Gork, Uwo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Slime\", function() { return Slime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Gork\", function() { return Gork; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Uwo\", function() { return Uwo; });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vector */ \"./js/vector.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Creep = /*#__PURE__*/function () {\n  function Creep(game, sprites, location, difficulty) {\n    _classCallCheck(this, Creep);\n\n    // * stats\n    this.game = game;\n    this.sprites = sprites;\n    this.difficulty = difficulty;\n    this.worth = 5 * this.difficulty;\n    this.pointValue = 100 * this.difficulty;\n    this.alive = true;\n    this.w = this.maxHealth; // * movement\n\n    this.location = location;\n    this.prevCell = null;\n    this.currentCell = this.getCell();\n    this.nextCell = null;\n    this.stuck = false;\n    this.velocity = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0, 0);\n    this.acceleration = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0, 0); // * default\n\n    this.context = this.game.context;\n    this.radius = 12;\n    this.color = \"rgb(225, 225, 225)\"; // * img\n\n    this.currSheet = 0;\n    this.dir = 0;\n    this.frame = 0;\n    this.step = 0; // * slow\n\n    this.slowed = false;\n    this.slowTimeout = 0;\n  }\n\n  _createClass(Creep, [{\n    key: \"checkBorder\",\n    value: function checkBorder() {\n      if (this.location.x <= 45 || this.location.x > 795) {\n        this.velocity.x = -this.velocity.x / 2;\n      }\n\n      if (this.location.y <= 45 || this.location.y > 515) {\n        this.velocity.y = -this.velocity.y / 2;\n      }\n    }\n  }, {\n    key: \"checkWalls\",\n    value: function checkWalls() {\n      var cell = this.getCell();\n\n      if (cell.occupied && !this.stuck && this.prevCell) {\n        this.velocity.x = -this.velocity.x / 2;\n        this.velocity.y = -this.velocity.y / 2;\n      }\n    }\n  }, {\n    key: \"checkHit\",\n    value: function checkHit() {\n      if (this.currentCell.attacked) {\n        this.health -= this.currentCell.attackDamage;\n        if (this.currentCell.attackSlow) this.slow();\n      }\n    }\n  }, {\n    key: \"checkAlive\",\n    value: function checkAlive() {\n      if (this.health <= 0) {\n        this.game.bits += this.worth;\n        this.game.score += this.pointValue;\n        this.game.cr += this.worth + this.pointValue;\n        this.alive = false;\n      }\n    }\n  }, {\n    key: \"checkSheet\",\n    value: function checkSheet() {\n      if (this.slowed) {\n        this.currSheet = 4;\n      } else if (this.health <= this.maxHealth * 0.25) {\n        this.currSheet = 3;\n      } else if (this.health <= this.maxHealth * 0.5) {\n        this.currSheet = 2;\n      } else if (this.health <= this.maxHealth * 0.75) {\n        this.currSheet = 1;\n      } else {\n        this.currSheet = 0;\n      }\n    }\n  }, {\n    key: \"takeLife\",\n    value: function takeLife() {\n      this.alive = false;\n\n      if (!this.game.gameOver) {\n        this.game.lives -= 1;\n        this.game.cr -= 1;\n        var lives = document.querySelector(\"#info-lives\");\n\n        if (!lives.classList.contains(\"flashing\")) {\n          lives.classList.add(\"flashing\");\n          setTimeout(function () {\n            lives.classList.remove(\"flashing\");\n          }, 1000);\n        }\n      } // if (!this.game.muted) {\n      //     const lose = new Audio;\n      //     lose.setAttribute('src', 'sounds/lose_life.mp3');\n      //     lose.load();\n      //     lose.play();\n      // }\n\n    }\n  }, {\n    key: \"slow\",\n    value: function slow() {\n      this.slowed = true;\n      this.slowTimeout = 30;\n    }\n  }, {\n    key: \"moveSlow\",\n    value: function moveSlow() {\n      this.velocity.slow();\n      this.slowTimeout--;\n\n      if (this.slowTimeout <= 0) {\n        this.slowed = false;\n      }\n    }\n  }, {\n    key: \"move\",\n    value: function move() {\n      this.acceleration = this.acceleration.subGetNew(this.nextCell.center, this.currentCell.center);\n      this.acceleration.setMag(0.05);\n      this.setDir(this.nextCell.location);\n      this.velocity.add(this.acceleration);\n      this.velocity.normalize(this.slowed || this.stuck);\n\n      if (this.slowed) {\n        this.moveSlow();\n      }\n\n      this.location.add(this.velocity);\n    }\n  }, {\n    key: \"getCell\",\n    value: function getCell() {\n      var col = Math.floor(this.location.x / this.game.cellSize);\n      var row = Math.floor(this.location.y / this.game.cellSize);\n      return this.game.grid[col][row];\n    }\n  }, {\n    key: \"setCells\",\n    value: function setCells() {\n      var cell = this.getCell();\n\n      if (cell === this.game.goal) {\n        this.takeLife();\n        return;\n      }\n\n      this.stuck = cell.occupied;\n\n      if (this.stuck) {\n        this.nextCell = this.prevCell;\n      } else {\n        this.prevCell = this.currentCell;\n        this.nextCell = cell.smallestAdjacent;\n      }\n\n      this.currentCell = cell;\n    }\n  }, {\n    key: \"setDir\",\n    value: function setDir(dest) {\n      var loc = this.currentCell.location;\n\n      if (dest.x > loc.x) {\n        // * right\n        this.dir = 2;\n      } else if (dest.x < loc.x) {\n        // * left\n        this.dir = 1;\n      } else if (dest.y < loc.y) {\n        // * up\n        this.dir = 3;\n      } else {\n        // * down\n        this.dir = 0;\n      }\n    }\n  }, {\n    key: \"stepAnimation\",\n    value: function stepAnimation() {\n      this.step++;\n\n      if (!this.slowed && this.step >= 10 || this.step >= 20) {\n        this.step = 0;\n        this.frame = (this.frame + 1) % 4;\n      }\n\n      this.drawFrame();\n    }\n  }, {\n    key: \"drawFrame\",\n    value: function drawFrame() {\n      this.context.save();\n      this.context.translate(this.location.x, this.location.y);\n      this.context.drawImage(this.sprites[this.type][this.currSheet], this.frame * this.size, this.dir * this.size, this.size, this.size, -this.size, -this.size - this.offset, this.size * 2, this.size * 2);\n      this.context.restore();\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      this.update();\n      this.render();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.checkWalls();\n      this.checkBorder();\n      this.checkHit();\n      this.checkAlive();\n      this.setCells();\n      this.move();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.checkSheet();\n      this.stepAnimation(); // this.drawCircle();\n    } // drawCircle() {\n    //   this.context.beginPath();\n    //   this.context.arc(\n    //     this.location.x,\n    //     this.location.y,\n    //     this.radius,\n    //     0,\n    //     Math.PI * 2\n    //   );\n    //   this.context.fillStyle = this.color;\n    //   this.context.fill();\n    // }\n\n  }]);\n\n  return Creep;\n}();\n\nvar Slime = /*#__PURE__*/function (_Creep) {\n  _inherits(Slime, _Creep);\n\n  var _super = _createSuper(Slime);\n\n  function Slime(game, sprites, location, difficulty) {\n    var _this;\n\n    _classCallCheck(this, Slime);\n\n    _this = _super.call(this, game, sprites, location, difficulty);\n    _this.type = \"slime\";\n    _this.maxHealth = game.wave * 350 * _this.difficulty;\n    _this.health = _this.maxHealth;\n    _this.size = 16;\n    _this.offset = 4;\n    return _this;\n  }\n\n  return Slime;\n}(Creep);\n\nvar Gork = /*#__PURE__*/function (_Creep2) {\n  _inherits(Gork, _Creep2);\n\n  var _super2 = _createSuper(Gork);\n\n  function Gork(game, sprites, location, difficulty) {\n    var _this2;\n\n    _classCallCheck(this, Gork);\n\n    _this2 = _super2.call(this, game, sprites, location, difficulty);\n    _this2.type = \"gork\";\n    _this2.maxHealth = game.wave * 800 * _this2.difficulty;\n    _this2.health = _this2.maxHealth;\n    _this2.size = 18;\n    _this2.offset = 4;\n    return _this2;\n  }\n\n  return Gork;\n}(Creep);\n\nvar Uwo = /*#__PURE__*/function (_Creep3) {\n  _inherits(Uwo, _Creep3);\n\n  var _super3 = _createSuper(Uwo);\n\n  function Uwo(game, sprites, location, difficulty) {\n    var _this3;\n\n    _classCallCheck(this, Uwo);\n\n    _this3 = _super3.call(this, game, sprites, location, difficulty);\n    _this3.type = \"uwo\";\n    _this3.maxHealth = game.wave * 1200 * _this3.difficulty;\n    _this3.health = _this3.maxHealth;\n    _this3.size = 32;\n    _this3.offset = 16;\n    return _this3;\n  }\n\n  return Uwo;\n}(Creep);\n\n\n\n//# sourceURL=webpack:///./js/creep.js?");

/***/ }),

/***/ "./js/dom.js":
/*!*******************!*\
  !*** ./js/dom.js ***!
  \*******************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DomHandler; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DomHandler = function DomHandler() {\n  _classCallCheck(this, DomHandler);\n\n  // * main\n  this.holder = document.querySelector(\"#holder\");\n  this.play = document.querySelector(\"#play-button\");\n  this.startText = document.querySelector(\"#game-info\");\n  this.wrapper = document.querySelector(\"#canvas-wrapper\");\n  this.canvas = document.querySelector(\"canvas\");\n  this.footer = document.querySelector(\"footer\"); // * endgame\n\n  this.gameOver = document.querySelector(\"#game-over-screen\");\n  this.overTitle = document.querySelector(\"#game-over-title\");\n  this.terminal = document.querySelector(\"#score-terminal\");\n  this.scores = document.querySelector(\".scores\");\n  this[\"final\"] = document.querySelector(\"#local-score\");\n  this.local = document.querySelector(\"#local-top\"); // * tutorial\n\n  this.tutorialOpen = true;\n  this.tutorial = document.querySelector(\"#tutorial-window\");\n  this.tutorialSlide = document.querySelector(\"#tutorial-slide\");\n  this.tutorialText = document.querySelector(\"#tutorial-text\");\n  this.tutorialP = document.querySelector(\"#tutorial-text-p\");\n  this.tutorialIcon = document.querySelector(\"#tutorial-icon\"); // * hotkey info\n\n  this.hotkeysOpen = false;\n  this.hotkeysSlide = document.querySelector(\"#hotkeys-slide\");\n  this.hotkeysIcon = document.querySelector(\"#hotkeys-icon\");\n  this.hotkeysText = document.querySelector(\"#hotkeys-text\"); // * top nav\n\n  this.topBar = document.querySelector(\"#game-controls\");\n  this.infoTiles = document.querySelectorAll(\"#info > .info-tile\");\n  this.score = document.querySelector(\"#info-score\");\n  this.currWave = document.querySelector(\"#info-wave\");\n  this.lives = document.querySelector(\"#info-lives\");\n  this.bank = document.querySelector(\"#info-bits\");\n  this.mute = document.querySelector(\"#mute-button\");\n  this.autoBox = document.querySelector(\"#auto-container\");\n  this.auto = document.querySelector(\"input[name=auto-wave]\");\n  this.wave = document.querySelector(\"#wave-button\");\n  this.waveText = document.querySelector(\"#wave-text\");\n  this.progress = document.querySelector(\"#wave-progress\"); // * bottom nav\n\n  this.bottomBar = document.querySelector(\"#content-box\");\n  this.towerMenu = document.querySelector(\"#towers\"); // this.towerStats = document.querySelectorAll(\n  //   \"#tower-details > .detail-tile\"\n  // );\n\n  this.type = document.querySelector(\"#tower-type\");\n  this.typeH = document.querySelector(\"#type-header\");\n  this.typeP = document.querySelector(\"#type-p\");\n  this.damage = document.querySelector(\"#tower-damage\");\n  this.damageH = document.querySelector(\"#damage-header\");\n  this.damageP = document.querySelector(\"#damage-p\");\n  this.range = document.querySelector(\"#tower-range\");\n  this.rangeH = document.querySelector(\"#range-header\");\n  this.rangeP = document.querySelector(\"#range-p\");\n  this.speed = document.querySelector(\"#tower-speed\");\n  this.speedH = document.querySelector(\"#speed-header\");\n  this.speedP = document.querySelector(\"#speed-p\");\n  this.next = document.querySelector(\"#tower-next\");\n  this.nextH = document.querySelector(\"#next-header\");\n  this.nextP = document.querySelector(\"#next-p\");\n  this.towerEdits = document.querySelectorAll(\"#edit-tower-buttons > .edit-button\");\n  this.upgrade = document.querySelector(\"#upgrade-button\");\n  this.sell = document.querySelector(\"#sell-button\");\n};\n\n\n\n//# sourceURL=webpack:///./js/dom.js?");

/***/ }),

/***/ "./js/game.js":
/*!********************!*\
  !*** ./js/game.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Game; });\n/* harmony import */ var _loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loader */ \"./js/loader.js\");\n/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./actions */ \"./js/actions.js\");\n/* harmony import */ var _tutorial__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tutorial */ \"./js/tutorial.js\");\n/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cell */ \"./js/cell.js\");\n/* harmony import */ var _tower__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tower */ \"./js/tower.js\");\n/* harmony import */ var _creep__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./creep */ \"./js/creep.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\nvar Game = /*#__PURE__*/function () {\n  function Game(dom, sprites) {\n    _classCallCheck(this, Game);\n\n    // * add canvas\n    this.dom = dom;\n    this.sprites = sprites;\n    this.canvas = this.dom.canvas;\n    this.context = this.canvas.getContext(\"2d\"); // * game objects\n\n    this.grid = [];\n    this.towers = [];\n    this.attacks = []; // * creep management\n\n    this.creeps = [];\n    this.stages = {}; // * game stats\n\n    this.lives = 1;\n    this.bits = 2000;\n    this.score = 0;\n    this.wave = 0;\n    this.difficulty = 1; // * grid specs\n\n    this.numBlocks = 35;\n    this.cellSize = 40;\n    this.numCols = 21;\n    this.numRows = 14;\n    this.start = null;\n    this.goal = null; // * track cells\n\n    this.border = [];\n    this.blocks = [];\n    this.selectedCells = []; // * pathing\n\n    this.validated = false;\n    this.loadGrid();\n    this.loadPaths(); // * draw path\n\n    this.path = this.getPath();\n    this.vertices = this.getVertices(this.path);\n    this.point = 10; // * tower buttons\n\n    this.tileDivs = this.createTiles(); // * track towers\n\n    this.showTowerDivInfo = null;\n    this.placingTower = false;\n    this.selectedTowers = []; // * wave tracking\n\n    this.autoWave = false;\n    this.sendingWave = false;\n    this.waveTimer = 0; // * music\n    // this.handleSoundButton();\n    // this.muted = false;\n    // * trackers\n    // this.cr = 220;\n    // this.c = 0;\n    // this.f;\n    // * bounds\n\n    this.gameStarted = false;\n    this.gameOver = false; // * add game element handlers\n\n    this.tutorial = new _tutorial__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, dom);\n    this.loader = new _loader__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, dom, sprites);\n    this.actions = new _actions__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, dom, this.tutorial, this.tileDivs);\n  } // handleSoundButton() {\n  //   const muteButton = this.dom.mute(\"#mute-button\");\n  //   muteButton.addEventListener(\"click\", this.audioToggle);\n  // }\n  // audioToggle() {\n  //   if (this.muted) {\n  //     this.classList.add(\"mute-off\");\n  //     this.classList.remove(\"mute-on\");\n  //     this.muted = false;\n  //     music.play();\n  //   } else {\n  //     this.classList.add(\"mute-on\");\n  //     this.classList.remove(\"mute-off\");\n  //     this.muted = true;\n  //     music.stop();\n  //   }\n  // }\n\n\n  _createClass(Game, [{\n    key: \"checkTowerPlacement\",\n    value: function checkTowerPlacement(cell) {\n      if (cell[\"static\"] || cell.occupied) return;\n      cell.occupied = true;\n      this.loadPaths();\n\n      if (this.checkPaths(cell) && this.checkRoute()) {\n        this.placeTower(cell);\n      } else {\n        cell.cancel();\n        this.loadPaths();\n      }\n    }\n  }, {\n    key: \"checkPaths\",\n    value: function checkPaths(cell) {\n      var _this = this;\n\n      return this.creeps.every(function (creep) {\n        if (creep.currentCell === cell) return false;\n        var route = [creep.currentCell];\n\n        while (route.length) {\n          var checkCell = route.pop();\n\n          if (checkCell) {\n            if (checkCell.value === -1) {\n              continue;\n            } else if (checkCell === _this.goal) {\n              return true;\n            }\n\n            route.push(checkCell.smallestAdjacent);\n          }\n        }\n\n        return false;\n      });\n    }\n  }, {\n    key: \"checkRoute\",\n    value: function checkRoute() {\n      var route = [this.start];\n\n      while (route.length) {\n        var cell = route.pop();\n\n        if (cell.value === -1) {\n          return false;\n        } else if (cell === this.goal) {\n          return true;\n        }\n\n        route.push(cell.smallestAdjacent);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"resetSelects\",\n    value: function resetSelects() {\n      this.selectedTowers.forEach(function (tower) {\n        tower.deselect(true);\n      });\n      this.selectedTowers = [];\n      this.selectedCells = [];\n    }\n  }, {\n    key: \"selectAllTowers\",\n    value: function selectAllTowers(type, level) {\n      this.resetSelects();\n\n      for (var i = 0; i < this.towers.length; i++) {\n        var tower = this.towers[i];\n\n        if (tower.type === type && tower.level === level) {\n          tower.select();\n        } else {\n          tower.deselect(true);\n        }\n      }\n    }\n  }, {\n    key: \"createTiles\",\n    value: function createTiles() {\n      var tileDivs = [];\n\n      for (var i = 0; i < 4; i++) {\n        var tileDiv = this.addTowerStats(i);\n        this.dom.towerMenu.appendChild(tileDiv);\n        tileDivs.push(tileDiv);\n        var tileImg = new Image();\n        tileImg.src = \"/images/towers/tiles/\".concat(tileDiv.type, \".png\");\n        tileDiv.appendChild(tileImg);\n        var towerName = document.createElement(\"p\");\n        towerName.innerText = \"\".concat(tileDiv.cost, \"\\xA5\");\n        tileDiv.appendChild(towerName);\n      }\n\n      return tileDivs;\n    }\n  }, {\n    key: \"addTowerStats\",\n    value: function addTowerStats(i) {\n      var div = document.createElement(\"div\");\n      div.idx = i;\n\n      if (i === 0) {\n        div.type = \"earth\";\n        div.cost = 15;\n        div.upgrade = 30;\n        div.range = 100;\n        div.cooldown = 1000;\n        div.damage = 30;\n        div.speed = 8;\n      } else if (i === 1) {\n        div.type = \"water\";\n        div.cost = 30;\n        div.upgrade = 60;\n        div.range = 120;\n        div.cooldown = 400;\n        div.damage = 10;\n        div.speed = 1;\n      } else if (i === 2) {\n        div.type = \"fire\";\n        div.cost = 50;\n        div.upgrade = 100;\n        div.range = 100;\n        div.cooldown = 200;\n        div.damage = 20;\n        div.speed = 10;\n      } else {\n        div.type = \"air\";\n        div.cost = 100;\n        div.upgrade = 200;\n        div.range = 150;\n        div.cooldown = 1800;\n        div.damage = 100;\n        div.speed = 16;\n      }\n\n      return div;\n    }\n  }, {\n    key: \"createTower\",\n    value: function createTower(tileDiv) {\n      var tower = new _tower__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, this.dom, this.sprites, this.context, tileDiv.idx, tileDiv.cost, tileDiv.upgrade, tileDiv.type, tileDiv.range, tileDiv.damage, tileDiv.cooldown, tileDiv.speed);\n      this.towers.push(tower);\n    }\n  }, {\n    key: \"placeTower\",\n    value: function placeTower(cell) {\n      var tower = this.towers[this.towers.length - 1];\n      tower.cell = cell;\n      tower.location = cell.center.copy();\n      this.bits -= tower.cost; // this.cr -= tower.cost;\n\n      tower.placed = true;\n      this.placingTower = false;\n      this.path = this.getPath();\n    }\n  }, {\n    key: \"loadGrid\",\n    value: function loadGrid() {\n      var id = 0;\n\n      for (var c = 0; c < this.numCols; c++) {\n        this.grid.push([]);\n\n        for (var r = 0; r < this.numRows; r++) {\n          this.grid[c].push(new _cell__WEBPACK_IMPORTED_MODULE_3__[\"default\"](id++, this.grid, this.cellSize, this.context, this.sprites.wall, this.sprites.wallSelected, c, r));\n        }\n      }\n\n      this.initBorder();\n      this.initPosts();\n      this.initBlocks();\n    }\n  }, {\n    key: \"initBorder\",\n    value: function initBorder() {\n      for (var c = 0; c < this.numCols; c++) {\n        this.addBorderCell(c, 0);\n        this.addBorderCell(c, this.numRows - 1);\n      }\n\n      for (var r = 0; r < this.numRows; r++) {\n        this.addBorderCell(0, r);\n        this.addBorderCell(this.numCols - 1, r);\n      }\n    }\n  }, {\n    key: \"addBorderCell\",\n    value: function addBorderCell(col, row) {\n      var cell = this.grid[col][row];\n      cell.occupied = true;\n      cell[\"static\"] = true;\n      cell.img = this.sprites.border;\n      this.border.push(cell);\n    }\n  }, {\n    key: \"initPosts\",\n    value: function initPosts() {\n      this.start = this.grid[Math.ceil(Math.random() * 3) + 1][Math.ceil(Math.random() * 10) + 1];\n      var startImg = new Image();\n      startImg.src = \"/images/board/start.png\";\n      this.start.img = startImg;\n      this.start[\"static\"] = true;\n      this.goal = this.grid[Math.ceil(Math.random() * 3) + 15][Math.ceil(Math.random() * 10) + 1];\n      this.goal.value = 0;\n      var goalImg = new Image();\n      goalImg.src = \"/images/board/goal.png\";\n      this.goal.img = goalImg;\n      this.goal[\"static\"] = true;\n    }\n  }, {\n    key: \"initBlocks\",\n    value: function initBlocks() {\n      this.resetBlocks();\n\n      for (var i = 0; i < this.numBlocks; i++) {\n        var randRow = Math.floor(Math.random() * 17) + 2;\n        var randCol = Math.floor(Math.random() * 10) + 2;\n        var cell = this.grid[randRow][randCol];\n\n        if (cell !== this.start && cell !== this.goal && !cell.occupied) {\n          cell.occupied = true;\n          this.blocks.push(cell);\n        } else {\n          i--;\n        }\n      }\n    }\n  }, {\n    key: \"resetBlocks\",\n    value: function resetBlocks() {\n      this.blocks.forEach(function (block) {\n        block.occupied = false;\n      });\n      this.blocks = [];\n    }\n  }, {\n    key: \"loadPaths\",\n    value: function loadPaths() {\n      this.resetPaths();\n      var checkCells = [this.goal];\n\n      while (checkCells.length) {\n        var current = checkCells.shift();\n\n        for (var i = 0; i < current.adjacent.length; i++) {\n          var cell = current.adjacent[i];\n\n          if (cell.value === -1) {\n            checkCells.push(cell);\n            cell.value = current.value + 1;\n          }\n        }\n      }\n\n      for (var col = 0; col < this.grid.length; col++) {\n        for (var row = 0; row < this.grid[col].length; row++) {\n          if (!this.grid[col][row].occupied) {\n            this.grid[col][row].getShortestRoute();\n          }\n        }\n      }\n\n      if (!this.validated) {\n        this.ensureValidMap();\n      }\n    }\n  }, {\n    key: \"resetPaths\",\n    value: function resetPaths() {\n      var _this2 = this;\n\n      this.grid.forEach(function (col) {\n        col.forEach(function (cell) {\n          if (cell !== _this2.goal) {\n            cell.value = -1;\n            cell.adjacent = [];\n          }\n        });\n      });\n\n      for (var c = 0; c < this.numCols; c++) {\n        for (var r = 0; r < this.numRows; r++) {\n          this.grid[c][r].loadAdjacentCells();\n        }\n      }\n    }\n  }, {\n    key: \"ensureValidMap\",\n    value: function ensureValidMap() {\n      var pathBlocked = false;\n\n      for (var c = 0; c < this.numCols; c++) {\n        for (var r = 0; r < this.numRows; r++) {\n          if (this.grid[c][r].value === -1 && !this.grid[c][r].occupied) {\n            pathBlocked = true;\n          }\n        }\n      }\n\n      if (pathBlocked) {\n        this.initBlocks();\n        this.loadPaths();\n      } else {\n        this.validated = true;\n      }\n    }\n  }, {\n    key: \"nextWave\",\n    value: function nextWave() {\n      // this.cr -= this.bits;\n      this.bits = Math.ceil(this.bits / 5) * 5; // this.cr += this.bits;\n\n      if (this.wave % 10 === 0) {\n        this.difficulty += 0.5;\n      }\n\n      if (this.wave % 30 === 0) {\n        this.difficulty += 0.5;\n      }\n\n      this.bits += 5 * this.wave; // this.cr += 5 * this.wave;\n\n      this.loadCreeps(200);\n    }\n  }, {\n    key: \"loadCreeps\",\n    value: function loadCreeps(numCreeps) {\n      var creeps = [];\n\n      for (var i = 0; i < numCreeps; i++) {\n        var location = this.start.center.copy();\n        var creep = void 0;\n\n        if (i === 0) {\n          if (this.wave % 5 === 0) {\n            creep = new _creep__WEBPACK_IMPORTED_MODULE_5__[\"Uwo\"](this, this.sprites, location, this.difficulty);\n          } else {\n            creep = new _creep__WEBPACK_IMPORTED_MODULE_5__[\"Gork\"](this, this.sprites, location, this.difficulty);\n          }\n        } else {\n          creep = new _creep__WEBPACK_IMPORTED_MODULE_5__[\"Slime\"](this, this.sprites, location, this.difficulty);\n        }\n\n        creeps.push(creep);\n      }\n\n      this.stages[this.wave] = [creeps, new Date() - 1500];\n    }\n  }, {\n    key: \"sendCreeps\",\n    value: function sendCreeps() {\n      for (var wave in this.stages) {\n        var creeps = this.stages[wave][0];\n\n        if (creeps.length) {\n          var curr = new Date();\n          var lastSent = this.stages[wave][1];\n\n          if (curr - lastSent > 1500) {\n            this.creeps.push(creeps.shift());\n            this.stages[wave][1] = curr;\n          }\n        } else {\n          delete this.stages[wave];\n        }\n      }\n    }\n  }, {\n    key: \"checkHit\",\n    value: function checkHit(attack) {\n      var gridCol = Math.floor(attack.location.x / this.cellSize);\n      var gridRow = Math.floor(attack.location.y / this.cellSize);\n\n      if (this.grid[gridCol] && this.grid[gridCol][gridRow]) {\n        var cell = this.grid[gridCol][gridRow];\n        cell.attack(attack.damage, attack.type === \"water\");\n\n        for (var j = 0; j < this.creeps.length; j++) {\n          if (cell === this.creeps[j].currentCell) {\n            if (attack.type !== \"air\") attack.hit = true;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"checkWave\",\n    value: function checkWave() {\n      if (this.waveTimer > 0) {\n        this.waveTimer--;\n        this.dom.progress.style.width = \"\".concat(this.waveTimer / 4, \"%\");\n      } else {\n        this.sendingWave = false;\n        this.dom.wave.classList.add(\"clickable\");\n      }\n\n      if (this.creeps.length) {\n        this.dom.wave.classList.remove(\"active\");\n      } else if (!this.sendingWave) {\n        if (this.autoWave) {\n          this.dom.wave.click();\n        } else if (this.wave > 0) {\n          this.dom.wave.classList.add(\"active\");\n        } else if (this.bits < 50) {\n          this.dom.wave.classList.add(\"active\");\n          this.dom.towerMenu.classList.remove(\"active\");\n          this.tutorial.showInfo(\"canvas\");\n        }\n      }\n    } // checkStats() {\n    //   if (this.cr !== this.lives + this.score + this.bits + this.c) {\n    //     console.log(\"oh so you think you're clever\");\n    //     this.score = 0;\n    //     this.bits = 0;\n    //     this.lives = 1;\n    //     this.cr = this.lives + this.score + this.bits + this.c;\n    //   }\n    // }\n\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      var path = [this.start];\n\n      while (path[path.length - 1] !== this.goal) {\n        path.push(path[path.length - 1].smallestAdjacent);\n      }\n\n      this.vertices = this.getVertices(path);\n      return path;\n    }\n  }, {\n    key: \"getVertices\",\n    value: function getVertices(path) {\n      var vertices = [];\n\n      for (var i = 1; i < path.length; i++) {\n        var cell0 = path[i - 1];\n        var cell1 = path[i];\n        var dx = cell1.center.x - cell0.center.x;\n        var dy = cell1.center.y - cell0.center.y;\n\n        for (var j = 0; j < 15; j++) {\n          var x = cell0.center.x + dx * j / 15;\n          var y = cell0.center.y + dy * j / 15;\n          vertices.push({\n            x: x,\n            y: y\n          });\n        }\n      }\n\n      return vertices;\n    }\n  }, {\n    key: \"animatePath\",\n    value: function animatePath() {\n      this.context.beginPath();\n      this.context.moveTo(this.start.center.x, this.start.center.y);\n\n      for (var i = 1; i < this.path.length; i++) {\n        var cell = this.path[i];\n        this.context.lineTo(cell.center.x, cell.center.y);\n      }\n\n      this.context.strokeStyle = \"rgba(164, 124, 194, 0.3)\";\n      this.context.lineWidth = 4;\n      this.context.stroke();\n      this.animateTravel();\n      this.point++;\n    }\n  }, {\n    key: \"animateTravel\",\n    value: function animateTravel() {\n      if (this.vertices.length <= this.point) this.point = 10;\n      this.context.beginPath();\n      this.context.arc(this.vertices[this.point - 10].x, this.vertices[this.point - 10].y, 4, 0, Math.PI * 2);\n      this.context.fillStyle = \"rgba(164, 124, 194, 0.3)\";\n      this.context.fill();\n      this.context.beginPath();\n      this.context.arc(this.vertices[this.point - 5].x, this.vertices[this.point - 5].y, 5, 0, Math.PI * 2);\n      this.context.fillStyle = \"rgba(164, 124, 194, 0.3)\";\n      this.context.fill();\n      this.context.beginPath();\n      this.context.arc(this.vertices[this.point].x, this.vertices[this.point].y, 6, 0, Math.PI * 2);\n      this.context.fillStyle = \"rgba(164, 124, 194, 0.3)\";\n      this.context.fill();\n    }\n  }, {\n    key: \"animateBorder\",\n    value: function animateBorder() {\n      if (this.border.length) {\n        for (var i = 0; i < this.border.length; i++) {\n          var cell1 = this.border[i];\n          var cell2 = this.border[this.border.length - 1 - i];\n          this.blinkCell(cell1, i);\n          this.blinkCell(cell2, i);\n        }\n\n        this.border = [];\n      }\n    }\n  }, {\n    key: \"animateBlocks\",\n    value: function animateBlocks() {\n      if (this.blocks.length) {\n        for (var i = 0; i < this.blocks.length; i++) {\n          var cell = this.blocks[i];\n          this.blinkCell(cell, i + 20);\n        }\n\n        this.blocks = [];\n      }\n    }\n  }, {\n    key: \"blinkCell\",\n    value: function blinkCell(cell, time) {\n      cell.occupied = false;\n      cell[\"static\"] = false;\n      setTimeout(function () {\n        cell.occupied = true;\n        cell[\"static\"] = true;\n      }, time * 15);\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      // this.checkStats();\n      this.actions.updateStats();\n\n      if (!this.gameOver && this.gameStarted) {\n        this.actions.showTowerInfo();\n        this.checkWave();\n        this.sendCreeps();\n        this.render();\n\n        if (this.lives <= 0) {\n          setTimeout(this.actions.handleGameOver(), 1000);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.context.clearRect(0, 0, 840, 560); // if (this.creeps.length === 0 && !this.sendingWave) {\n\n      this.animatePath(); // }\n\n      for (var c = 0; c < this.numCols; c++) {\n        this.grid[c][0].run();\n        this.grid[c][this.numRows - 1].run();\n      }\n\n      for (var r = 1; r < this.numRows - 1; r++) {\n        this.grid[0][r].run();\n        this.grid[this.numCols - 1][r].run();\n      }\n\n      for (var _c = 1; _c < this.numCols - 1; _c++) {\n        for (var _r = 1; _r < this.numRows - 1; _r++) {\n          var cell = this.grid[_c][_r];\n          if (!cell.selected) cell.run();\n        }\n      }\n\n      for (var i = 0; i < this.selectedCells.length; i++) {\n        this.selectedCells[i].renderImage(\"selectImg\");\n      }\n\n      for (var _i = 0; _i < this.towers.length; _i++) {\n        var tower = this.towers[_i];\n\n        if (!tower.removed) {\n          tower.run();\n        } else {\n          this.towers.splice(_i, 1);\n          _i--;\n        }\n      }\n\n      for (var _i2 = 0; _i2 < this.creeps.length; _i2++) {\n        var creep = this.creeps[_i2];\n\n        if (creep.alive) {\n          creep.run();\n        } else {\n          this.creeps.splice(_i2, 1);\n          _i2--;\n        }\n      }\n\n      for (var _i3 = 0; _i3 < this.selectedTowers.length; _i3++) {\n        this.selectedTowers[_i3].drawRange();\n      }\n\n      for (var _i4 = 0; _i4 < this.attacks.length; _i4++) {\n        var attack = this.attacks[_i4];\n        this.checkHit(attack);\n\n        if (!attack.hit) {\n          attack.run();\n        } else {\n          this.attacks.splice(_i4, 1);\n          _i4--;\n        }\n      }\n    }\n  }]);\n\n  return Game;\n}();\n\n\n\n//# sourceURL=webpack:///./js/game.js?");

/***/ }),

/***/ "./js/loader.js":
/*!**********************!*\
  !*** ./js/loader.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Loader; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Loader = /*#__PURE__*/function () {\n  function Loader(game, dom, sprites) {\n    _classCallCheck(this, Loader);\n\n    this.game = game;\n    this.dom = dom;\n    this.sprites = sprites;\n    this.handleTitleScreen();\n  }\n\n  _createClass(Loader, [{\n    key: \"handleTitleScreen\",\n    value: function handleTitleScreen() {\n      var _this = this;\n\n      this.dom.upgrade.style.opacity = 0;\n      this.dom.sell.style.opacity = 0;\n      var title = new Image();\n      title.src = \"/images/splash/tower-time-title.png\";\n\n      title.onload = function () {\n        _this.game.context.drawImage(title, _this.dom.canvas.width / 2 - title.width / 2, 40);\n\n        _this.dom.holder.style.opacity = 100;\n      };\n\n      this.addPlayButton();\n    }\n  }, {\n    key: \"addPlayButton\",\n    value: function addPlayButton() {\n      this.dom.play.style.backgroundImage = \"url(\".concat(this.sprites.play.plain.src, \")\");\n      this.addListener(\"mouseover\", \"hover\");\n      this.addListener(\"mouseout\", \"plain\");\n      this.addListener(\"mousedown\", \"pressed\");\n      this.addListener(\"mouseup\", \"hover\");\n      this.addListener(\"click\", \"hover\", true);\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(action, img, start) {\n      var _this2 = this;\n\n      this.dom.play.addEventListener(action, function (e) {\n        e.target.style.backgroundImage = \"url(\".concat(_this2.sprites.play[img].src, \")\");\n        if (start) setTimeout(_this2.handleStart.bind(_this2), 300);\n      });\n    }\n  }, {\n    key: \"handleStart\",\n    value: function handleStart() {\n      this.dom.play.style.display = \"none\";\n      this.dom.startText.style.display = \"none\";\n      this.dom.footer.style.opacity = 0;\n      this.game.gameStarted = true;\n      this.game.run();\n      this.dom.canvas.style.backgroundColor = \"rgb(186, 186, 186)\";\n      this.dom.towerMenu.classList.add(\"active\");\n      this.dom.topBar.style.opacity = 100;\n      this.dom.bottomBar.style.opacity = 100;\n      this.dom.tutorial.style.opacity = 100;\n      this.game.animateBorder();\n      this.game.animateBlocks();\n    }\n  }]);\n\n  return Loader;\n}();\n\n\n\n//# sourceURL=webpack:///./js/loader.js?");

/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ \"./js/dom.js\");\n/* harmony import */ var _sprites__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sprites */ \"./js/sprites.js\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./game */ \"./js/game.js\");\n/* harmony import */ var _scores__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scores */ \"./js/scores.js\");\n\n\n\n\nwindow.addEventListener(\"load\", init);\nvar dom, sprites, game, scores, animation;\n\nfunction init() {\n  dom = dom ? dom : new _dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  sprites = sprites ? sprites : new _sprites__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n  game = new _game__WEBPACK_IMPORTED_MODULE_2__[\"default\"](dom, sprites);\n  scores ? (scores.game = game, scores.dom = dom) : scores = new _scores__WEBPACK_IMPORTED_MODULE_3__[\"default\"](dom, game);\n  game.actions.scores = scores;\n  game.actions.init = init;\n  window.cancelAnimationFrame(animation);\n  window.setTimeout(animate, 100);\n}\n\nfunction animate() {\n  game.run();\n  animation = window.requestAnimationFrame(animate);\n}\n\n//# sourceURL=webpack:///./js/main.js?");

/***/ }),

/***/ "./js/scores.js":
/*!**********************!*\
  !*** ./js/scores.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Scores; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Scores = /*#__PURE__*/function () {\n  function Scores(dom, game) {\n    _classCallCheck(this, Scores);\n\n    this.dom = dom;\n    this.game = game;\n    this.firebase = this.loadFireBase();\n  }\n\n  _createClass(Scores, [{\n    key: \"loadFireBase\",\n    value: function loadFireBase() {\n      var firebaseConfig = {\n        apiKey: \"AIzaSyCUl00bvLb_3Ytr6Wj_L-XIp-bVX4Yb8b0\",\n        authdomain: \"tower-time.firebaseapp.com\",\n        databaseURL: \"https://tower-time.firebaseio.com\",\n        projectId: \"tower-time\",\n        storageBucket: \"tower-time.appspot.com\",\n        messagingSenderId: \"114254327718\",\n        appId: \"1:114254327718:web:7d6db95c7f120f99452967\",\n        measurementId: \"G-0BEHEHSDDL\"\n      };\n      return firebase.initializeApp(firebaseConfig);\n    }\n  }, {\n    key: \"update\",\n    value: function update(name, score) {\n      this.firebase.auth().signInAnonymously();\n      this.firebase.database().ref(\"scores\").push({\n        name: name,\n        score: score\n      });\n    }\n  }, {\n    key: \"handleScores\",\n    value: function handleScores(highscores) {\n      var _this = this;\n\n      var rankList = document.createElement(\"ul\");\n      var scoreList = document.createElement(\"ul\");\n      var nameList = document.createElement(\"ul\");\n      var lowestShowing;\n      highscores.on(\"value\", function (snap) {\n        var data = snap.val();\n        var idArr = Object.keys(data);\n        var scores = [];\n\n        for (var i = 0; i < idArr.length; i++) {\n          scores.push([data[idArr[i]].score, data[idArr[i]].name]);\n        }\n\n        _this.sortScores(scores);\n\n        var rankCount = 1;\n        scores.forEach(function (score) {\n          var rankLi = document.createElement(\"li\");\n          var scoreLi = document.createElement(\"li\");\n          var nameLi = document.createElement(\"li\");\n          rankLi.innerText = rankCount++;\n          scoreLi.innerText = score[0];\n          nameLi.innerText = score[1];\n          rankList.appendChild(rankLi);\n          scoreList.appendChild(scoreLi);\n          nameList.appendChild(nameLi);\n        });\n        lowestShowing = scores[9][0];\n      });\n      var lists = [rankList, scoreList, nameList];\n      [\"RANK\", \"SCORE\", \"NAME\"].forEach(function (column, i) {\n        var div = document.createElement(\"div\");\n        div.classList.add(\"score-div\");\n        var rankTitle = document.createElement(\"h2\");\n        rankTitle.innerText = column;\n        div.appendChild(rankTitle);\n        div.appendChild(lists[i]);\n\n        _this.dom.scores.appendChild(div);\n      });\n\n      if (this.game.score >= lowestShowing) {\n        var form = document.createElement(\"form\");\n        var input = document.createElement(\"input\");\n        input.classList.add(\"name-input\");\n        input.placeholder = \"ADD NAME\";\n        input.maxLength = 3;\n        form.appendChild(input);\n        this.dom.terminal.appendChild(form);\n        form.addEventListener(\"submit\", function (event) {\n          return _this.addScore(event, lowestShowing, form);\n        });\n      } else {\n        this.addNewGame();\n      }\n    }\n  }, {\n    key: \"addScore\",\n    value: function addScore(event, lowestShowing, form) {\n      event.preventDefault();\n      var name = document.querySelector(\".name-input\");\n      var scoreList = document.querySelectorAll(\".score-div\");\n\n      if (this.game.score >= lowestShowing) {\n        scoreList.forEach(function (div) {\n          div.querySelector(\"ul\").innerHTML = \"\";\n        });\n      }\n\n      name.style.visibility = \"hidden\";\n\n      if (this.game.f === this.game.score) {\n        this.update(name.value.toUpperCase(), this.game.f);\n      } else {\n        window.location.reload(false);\n      }\n\n      this.dom.terminal.removeChild(form);\n      this.addNewGame();\n    }\n  }, {\n    key: \"addNewGame\",\n    value: function addNewGame() {\n      var _this2 = this;\n\n      var btn = document.createElement(\"button\");\n      btn.classList.add(\"new-game\");\n      btn.innerHTML = \"NEW GAME\";\n      btn.addEventListener(\"click\", function (e) {\n        e.preventDefault();\n\n        _this2.game.actions.newGame();\n      }, false);\n      this.dom.terminal.appendChild(btn);\n    }\n  }, {\n    key: \"sortScores\",\n    value: function sortScores(arr) {\n      var swapped;\n\n      do {\n        swapped = false;\n\n        for (var i = 0; i < arr.length - 1; i++) {\n          if (arr[i][0] < arr[i + 1][0]) {\n            var tmp = arr[i];\n            arr[i] = arr[i + 1];\n            arr[i + 1] = tmp;\n            swapped = true;\n          }\n        }\n      } while (swapped);\n\n      return arr;\n    }\n  }]);\n\n  return Scores;\n}();\n\n\n\n//# sourceURL=webpack:///./js/scores.js?");

/***/ }),

/***/ "./js/sprites.js":
/*!***********************!*\
  !*** ./js/sprites.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Sprites; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Sprites = /*#__PURE__*/function () {\n  function Sprites() {\n    _classCallCheck(this, Sprites);\n\n    this.border = new Image();\n    this.wall = new Image();\n    this.wallSelected = new Image();\n    this.tower = new Image();\n    this.attack = new Image();\n    this.slime = {};\n    this.gork = {};\n    this.uwo = {};\n    this.play = {\n      plain: new Image(),\n      hover: new Image(),\n      pressed: new Image()\n    };\n    this.addTileSources();\n    this.addCreepImages();\n  }\n\n  _createClass(Sprites, [{\n    key: \"addTileSources\",\n    value: function addTileSources() {\n      this.border.src = \"/images/board/border.png\";\n      this.border.style.opacity = 0.4;\n      this.wall.src = \"/images/board/wall.png\";\n      this.wallSelected.src = \"/images/board/wall-selected.png\";\n      this.tower.src = \"/images/towers/towers.png\";\n      this.attack.src = \"/images/towers/attacks.png\";\n      this.play.plain.src = \"/images/splash/play-button.png\";\n      this.play.hover.src = \"/images/splash/play-button-hover.png\";\n      this.play.pressed.src = \"/images/splash/play-button-pressed.png\";\n    }\n  }, {\n    key: \"addCreepImages\",\n    value: function addCreepImages() {\n      for (var i = 0; i < 5; i++) {\n        this.slime[i] = new Image();\n        this.slime[i].src = \"/images/creeps/slime/slime-\".concat(i, \".png\");\n        this.gork[i] = new Image();\n        this.gork[i].src = \"/images/creeps/gork/gork-\".concat(i, \".png\");\n        this.uwo[i] = new Image();\n        this.uwo[i].src = \"/images/creeps/uwo/uwo-\".concat(i, \".png\");\n      }\n    }\n  }]);\n\n  return Sprites;\n}();\n\n\n\n//# sourceURL=webpack:///./js/sprites.js?");

/***/ }),

/***/ "./js/tower.js":
/*!*********************!*\
  !*** ./js/tower.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Tower; });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vector */ \"./js/vector.js\");\n/* harmony import */ var _attack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./attack */ \"./js/attack.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar Tower = /*#__PURE__*/function () {\n  function Tower(game, dom, sprites, context, idx, cost, upgrade, type, range, damage, cooldown, speed) {\n    _classCallCheck(this, Tower);\n\n    this.game = game;\n    this.dom = dom;\n    this.sprites = sprites; // * images\n\n    this.width = 32;\n    this.height = 32; // * stats\n\n    this.idx = idx;\n    this.cost = cost;\n    this.upgrade = upgrade;\n    this.type = type;\n    this.range = range;\n    this.cooldown = cooldown;\n    this.damage = damage;\n    this.speed = speed; // * location\n\n    this.cell = null;\n    this.location = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0, 0); // * attack time\n\n    this.lastFired = Date.now(); // * direction\n\n    this.context = context;\n    this.angle = 0;\n    this.target = null;\n    this.follow = true; // * display\n\n    this.selected = false; // * init\n\n    this.level = 0;\n    this.canUpgrade = true;\n    this.visible = false;\n    this.placed = false;\n    this.removed = false;\n  }\n\n  _createClass(Tower, [{\n    key: \"findTarget\",\n    value: function findTarget() {\n      for (var i = 0; i < this.game.creeps.length; i++) {\n        var creep = this.game.creeps[i];\n\n        if (creep.alive && creep.location.dist(this.location) < this.range) {\n          this.follow = false;\n          return creep.location;\n        }\n      }\n\n      this.follow = true;\n      return new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.dom.canvas.mouseX, this.dom.canvas.mouseY);\n    }\n  }, {\n    key: \"checkFire\",\n    value: function checkFire() {\n      var mils = Date.now();\n      var dist = this.location.dist(this.target);\n\n      if (dist < this.range && this.placed && !this.follow && mils - this.lastFired > this.cooldown) {\n        this.lastFired = mils;\n        var attackLocation = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.location.x, this.location.y);\n        var attack = new _attack__WEBPACK_IMPORTED_MODULE_1__[\"default\"](attackLocation, this.sprites, this.context, this.angle, this.idx, this.level, this.type, this.damage, this.speed);\n        this.game.attacks.push(attack);\n      }\n    }\n  }, {\n    key: \"handleUpgrade\",\n    value: function handleUpgrade() {\n      this.level += 1;\n      this.upgrade *= 2;\n      this.damage = Math.ceil(this.damage * 2.5 / 5) * 5;\n      this.range += 25;\n      this.speed += 2;\n\n      if (this.level === 2) {\n        this.canUpgrade = false;\n      }\n    }\n  }, {\n    key: \"select\",\n    value: function select() {\n      this.selected = true;\n      this.cell.selected = true;\n      this.game.selectedTowers.push(this);\n      this.game.selectedCells.push(this.cell);\n    }\n  }, {\n    key: \"deselect\",\n    value: function deselect(present) {\n      this.selected = false;\n      this.cell.selected = false;\n\n      if (!present) {\n        this.removed = true;\n        this.cell.occupied = false;\n      }\n    }\n  }, {\n    key: \"drawRange\",\n    value: function drawRange() {\n      this.context.save();\n      this.context.beginPath();\n      this.context.arc(this.location.x, this.location.y, this.range, 0, Math.PI * 2);\n      this.context.strokeStyle = \"rgba(222, 255, 252, 0.4)\";\n      this.context.lineWidth = 4;\n      this.context.stroke();\n      this.context.restore();\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      this.update();\n      this.render();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.target = this.findTarget();\n      var dx = this.location.x - this.target.x;\n      var dy = this.location.y - this.target.y;\n      this.angle = Math.atan2(dy, dx) - Math.PI;\n      this.checkFire();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.visible) {\n        if (!this.placed) this.drawRange();\n        this.context.save();\n        this.context.translate(this.location.x, this.location.y);\n        this.context.rotate(this.angle);\n        this.context.drawImage(this.sprites.tower, this.level * this.width, this.idx * this.height, this.width, this.height, -this.width / 2, -this.height / 2, this.width, this.height);\n        this.context.restore();\n      }\n    }\n  }]);\n\n  return Tower;\n}();\n\n\n\n//# sourceURL=webpack:///./js/tower.js?");

/***/ }),

/***/ "./js/tutorial.js":
/*!************************!*\
  !*** ./js/tutorial.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Tutorial; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Tutorial = /*#__PURE__*/function () {\n  function Tutorial(game, dom) {\n    _classCallCheck(this, Tutorial);\n\n    this.game = game;\n    this.dom = dom;\n    this.slide1 = this.dom.tutorialSlide;\n    this.slide2 = this.dom.hotkeysSlide;\n    this.slide1.addEventListener(\"click\", this.toggleTutorial.bind(this));\n    this.slide2.addEventListener(\"click\", this.toggleHotkeys.bind(this));\n    this[\"default\"] = \"move your mouse anywhere to learn more, click here to hide tooltips\";\n    this.tips = this.makeTips();\n    this.addListeners(this.tips);\n  }\n\n  _createClass(Tutorial, [{\n    key: \"addListeners\",\n    value: function addListeners(tips) {\n      var _this = this;\n\n      var _loop = function _loop(key) {\n        var text = tips[key];\n        var div = _this.dom[key];\n        div.addEventListener(\"mouseover\", function () {\n          return _this.showInfo(key, text);\n        });\n        div.addEventListener(\"mouseout\", _this.clearTip.bind(_this));\n      };\n\n      for (var key in tips) {\n        _loop(key);\n      }\n    }\n  }, {\n    key: \"toggleTutorial\",\n    value: function toggleTutorial() {\n      this.dom.tutorialText.classList.toggle(\"hidden\");\n      this.dom.tutorialOpen = !this.dom.tutorialOpen;\n      this.dom.tutorialSlide.setAttribute(\"class\", this.dom.tutorialOpen ? \"open\" : \"closed\");\n      this.dom.tutorialIcon.classList.toggle(\"hidden\");\n    }\n  }, {\n    key: \"toggleHotkeys\",\n    value: function toggleHotkeys() {\n      this.dom.hotkeysText.classList.toggle(\"hidden\");\n      this.dom.hotkeysOpen = !this.dom.hotkeysOpen;\n      this.dom.hotkeysSlide.setAttribute(\"class\", this.dom.hotkeysOpen ? \"open\" : \"closed\");\n      this.dom.hotkeysIcon.classList.toggle(\"hidden\");\n    }\n  }, {\n    key: \"showInfo\",\n    value: function showInfo(name, tip) {\n      if (this.game.wave === 0) {\n        if (name === \"canvas\") {\n          if (this.game.bits < 50) {\n            tip = \"now that you have a few towers, you're ready to take on the first wave! good luck\";\n          } else {\n            tip = \"enemies will start at the blue square and try to get to the red one, build towers to stop them\";\n          }\n        }\n\n        if (name === \"towerMenu\") {\n          tip = \"click a tower to select it, then click on the board to buy and place it\";\n        }\n      }\n\n      if (name === \"type\") {\n        var type = this.dom.type.lastChild.innerHTML;\n\n        if (type === \"EARTH\") {\n          tip = \"earth type is a basic tower, good for using up spare bank and making long walls; packs a punch once upgraded\";\n        } else if (type === \"WATER\") {\n          tip = \"water type slows things down a little, but is also a little slow; make sure it can hit its target, or at least something...\";\n        } else if (type === \"FIRE\") {\n          tip = \"fire type is fast, but has a low range; it needs to be in the heat of battle to be fully effective\";\n        } else if (type === \"AIR\") {\n          tip = \"air type is a lofty tower, and attacks everything in its path; give it good direction and it'll blow enemies away\";\n        }\n      } else if ((name === \"upgrade\" || name === \"sell\") && !this.game.selectedTowers.length) {\n        tip = this[\"default\"];\n      }\n\n      this.dom.tutorialP.innerHTML = tip;\n      this.ensureDefault();\n    }\n  }, {\n    key: \"ensureDefault\",\n    value: function ensureDefault() {\n      if (this.dom.tutorialP.innerHTML === \"undefined\") {\n        this.dom.tutorialP.innerHTML = this[\"default\"];\n      }\n    }\n  }, {\n    key: \"clearTip\",\n    value: function clearTip() {\n      this.dom.tutorialP.innerHTML = this[\"default\"];\n    }\n  }, {\n    key: \"makeTips\",\n    value: function makeTips() {\n      return {\n        canvas: \"enemies will start at the blue square and try to get to the red one, but cannot move through blocks or towers; click on placed towers to edit them\",\n        score: \"your score increases for every enemy stopped before it reaches the red square\",\n        currWave: \"the amount of waves you have survived so far, including the current wave\",\n        lives: \"if an enemy makes it to the red square, you lose a life; reach zero lives and the this.game is over\",\n        bank: \"spend your bank on towers and upgrades; add to it by stopping enemies and sending waves\",\n        autoBox: \"select to send the next wave once there are no more enemies on the board\",\n        wave: \"send the next wave of enemies\",\n        towerMenu: \"hover over a tower to show its stats, click one to select it, then click on the board to buy a new tower of that type\",\n        type: \"the tower's type; look at individual tower notes while a tower is selected\",\n        damage: \"amount of damage each of the tower's attacks will deal to an enemy\",\n        range: \"the tower's line of sight\",\n        speed: \"how quickly the tower fires\",\n        next: \"cost to upgrade the tower\",\n        upgrade: \"upgrade the current tower for its next cost\",\n        sell: \"sell the current tower for its most recent cost\"\n      };\n    }\n  }]);\n\n  return Tutorial;\n}();\n\n\n\n//# sourceURL=webpack:///./js/tutorial.js?");

/***/ }),

/***/ "./js/vector.js":
/*!**********************!*\
  !*** ./js/vector.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Vector; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Vector = /*#__PURE__*/function () {\n  function Vector(x, y) {\n    _classCallCheck(this, Vector);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  _createClass(Vector, [{\n    key: \"add\",\n    value: function add(vec) {\n      this.x += vec.x;\n      this.y += vec.y;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(vec) {\n      this.x -= vec.x;\n      this.y -= vec.y;\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(affected) {\n      var len = Math.sqrt(this.x * this.x + this.y * this.y);\n\n      if (len > 1 || affected) {\n        this.x /= len;\n        this.y /= len;\n      }\n\n      return new Vector(this.x, this.y);\n    }\n  }, {\n    key: \"slow\",\n    value: function slow() {\n      this.x /= 2;\n      this.y /= 2;\n      return new Vector(this.x, this.y);\n    }\n  }, {\n    key: \"addGetNew\",\n    value: function addGetNew(vec1, vec2) {\n      var x = vec1.x + vec2.x;\n      var y = vec1.y + vec2.y;\n      return new Vector(x, y);\n    }\n  }, {\n    key: \"subGetNew\",\n    value: function subGetNew(vec1, vec2) {\n      var x = vec1.x - vec2.x;\n      var y = vec1.y - vec2.y;\n      return new Vector(x, y);\n    }\n  }, {\n    key: \"getDir\",\n    value: function getDir() {\n      return Math.atan2(this.y, this.x);\n    }\n  }, {\n    key: \"getMag\",\n    value: function getMag() {\n      var x2 = this.x * this.x;\n      var y2 = this.y * this.y;\n      return Math.sqrt.apply(x2 + y2);\n    }\n  }, {\n    key: \"setDir\",\n    value: function setDir(newAngle) {\n      var magnitude = this.getMag();\n      this.x = Math.cos(newAngle) * magnitude;\n      this.y = Math.sin(newAngle) * magnitude;\n    }\n  }, {\n    key: \"setMag\",\n    value: function setMag(magnitude) {\n      var angle = this.getDir();\n      this.x = Math.cos(angle) * magnitude;\n      this.y = Math.sin(angle) * magnitude;\n    }\n  }, {\n    key: \"dist\",\n    value: function dist(vector) {\n      var x = this.x - vector.x;\n      var y = this.y - vector.y;\n      return Math.sqrt(x * x + y * y);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return new Vector(this.x, this.y);\n    }\n  }]);\n\n  return Vector;\n}();\n\n\n\n//# sourceURL=webpack:///./js/vector.js?");

/***/ })

/******/ });